# Default values for spotify-auth-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/conradludgate/spotify-auth-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# This is the secret that includes the client credentials.
# Below are the secret keys and their equivalent env vars:
# (required) spotifyClientID -> SPOTIFY_CLIENT_ID
# (required) spotifyClientSecret -> SPOTIFY_CLIENT_SECRET
clientCredentialsSecret:
  # Specifies whether the client credentials secret should be created. If set
  # to false, then a manually created secret is expected in order to set the
  # values of the environment variables described above.
  create: true
  # The name of the secret. If not set, a name is generated using the fullname template.
  # If create is true, then this is the name of the secret that helm will create
  # If create is false, then this is the name of the manually created secret.
  name: ""
  # Annotations to add to the secret
  annotations: {}
  # Required secret keys (only if "create" is "true")
  spotifyClientID:
  spotifyClientSecret:

proxyAPIKeySecret:
  create: false
  external: false
  # The name of the secret. If not set, a name is generated using the fullname template.
  name: ""
  # Annotations to add to the secret
  annotations: {}
  spotifyProxyAPIKey:

# (Optional) This sets the SPOTIFY_PROXY_BASE_URL env var
#spotifyProxyBaseURL:

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 27228

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
